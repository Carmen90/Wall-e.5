package tp.pr5;


import java.util.Iterator;

import tp.pr5.instructions.Instruction;
import tp.pr5.instructions.QuitInstruction;
import tp.pr5.instructions.exceptions.InstructionExecutionException;
import tp.pr5.items.InventoryObserver;
import tp.pr5.items.ItemContainer;

public class RobotEngine extends tp.pr5.Observable<RobotEngineObserver>{
	private NavigationModule navega;
	private int fuel;
	private int recycledMaterial;
	private ItemContainer container;
	private Direction direction;
	private boolean quit;
	

	public RobotEngine (){
		this.fuel = 100;
		this.recycledMaterial = 0;
		this.container = new ItemContainer ();
		this.direction = Direction.NORTH;
		this.navega = new NavigationModule();
		this.quit = false;
	}
	
	public RobotEngine(City map,
	           Place initialPlace,
	           Direction direction){
		this.navega = new NavigationModule ( map, initialPlace);
		this.recycledMaterial = 0;
		this.fuel = 100;
		this.container = new ItemContainer();
		this.direction = direction;
		this.quit = false;
	}

	public void communicateRobot(Instruction c){
		 c.configureContext(this,this.navega,this.container);
		 try{
			 c.execute();
		 }catch(InstructionExecutionException e){
				Iterator <RobotEngineObserver> robOb = this.iterator();
				while (robOb.hasNext()){
					robOb.next().raiseError(e.getMessage());
				}
			 
		 }
	}
	
	public boolean isOver(){
		return this.fuel <= 0 || this.navega.getCurrentPlace().isSpaceship() || this.quit  ;
		
	}

	public void addRecycledMaterial(int weight){
		this.recycledMaterial += weight;
		Iterator <RobotEngineObserver> robOb = this.iterator();
		while (robOb.hasNext()){
			robOb.next().robotUpdate(fuel, this.recycledMaterial);
		}
	}
	
	public void addFuel(int fuel){
		this.fuel += fuel;
		Iterator <RobotEngineObserver> robOb = this.iterator();
		while (robOb.hasNext()){
			robOb.next().robotUpdate(this.fuel, this.recycledMaterial);
		}
	}
	
	public int getFuel(){
		return this.fuel;
	}
	
	public int getRecycledMaterial(){
		return this.recycledMaterial;
	}
	
	public void requestStart(){
		
		Iterator <RobotEngineObserver> robOb = this.iterator();
		while (robOb.hasNext()){
			robOb.next().robotUpdate(fuel, recycledMaterial);
		}
		
		Iterator <NavigationObserver> navOb = this.navega.iterator();
		while ( navOb.hasNext()){
			navOb.next().initNavigationModule(this.navega.getCurrentPlace(), this.direction);
		}
	}
	
	public void requestQuit(){
		this.quit = true;
		Iterator <RobotEngineObserver> robOb = this.iterator();
		while ( robOb.hasNext()){
			robOb.next().communicationCompleted();
		}

	}
	
	public void requestHelp(){
		Iterator <RobotEngineObserver> robOb = this.iterator();
		while (robOb.hasNext()){
			robOb.next().communicationHelp(Interpreter.interpreterHelp());
		}
	}
	
	public void requestError(java.lang.String msg){
		Iterator <RobotEngineObserver> robOb = this.iterator();
		while (robOb.hasNext()){
			robOb.next().raiseError(msg);
		}
	}
	
	public void saySomething(java.lang.String message){
		Iterator <RobotEngineObserver> robOb = this.iterator();
		while (robOb.hasNext()){
			robOb.next().robotSays(message);
		}
	}
	
	public void addNavigationObserver(NavigationObserver robotObserver){
		this.navega.add(robotObserver);
	}
	
	public void addEngineObserver(RobotEngineObserver observer){
		this.add(observer);
	}
	
	public void addItemContainerObserver(InventoryObserver observer){
		this.container.add(observer);
	}

}

